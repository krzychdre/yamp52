<?php

namespace Entity\Proxy;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class UserProxy extends \User implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    private function _load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    
    public function getId()
    {
        $this->_load();
        return parent::getId();
    }

    public function setId($id)
    {
        $this->_load();
        return parent::setId($id);
    }

    public function getLogin()
    {
        $this->_load();
        return parent::getLogin();
    }

    public function setLogin($login)
    {
        $this->_load();
        return parent::setLogin($login);
    }

    public function getFirstName()
    {
        $this->_load();
        return parent::getFirstName();
    }

    public function setFirstName($firstName)
    {
        $this->_load();
        return parent::setFirstName($firstName);
    }

    public function getLastName()
    {
        $this->_load();
        return parent::getLastName();
    }

    public function setLastName($lastName)
    {
        $this->_load();
        return parent::setLastName($lastName);
    }

    public function getPassword()
    {
        $this->_load();
        return parent::getPassword();
    }

    public function setPassword($password)
    {
        $this->_load();
        return parent::setPassword($password);
    }

    public function getActive()
    {
        $this->_load();
        return parent::getActive();
    }

    public function setActive($active)
    {
        $this->_load();
        return parent::setActive($active);
    }

    public function getRoles()
    {
        $this->_load();
        return parent::getRoles();
    }

    public function setRoles($roles)
    {
        $this->_load();
        return parent::setRoles($roles);
    }

    public function getAcls()
    {
        $this->_load();
        return parent::getAcls();
    }

    public function setAcls($acls)
    {
        $this->_load();
        return parent::setAcls($acls);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'login', 'firstName', 'lastName', 'password', 'active', 'roles', 'acls');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}